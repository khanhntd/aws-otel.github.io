{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/docs/getting-started/remote-sampling","result":{"data":{"mdx":{"id":"59577186-0e78-5bae-8f9a-e37c8395662c","excerpt":"AWS X-Ray remote sampling  is supported\nwith OpenTelemetry by configuring the OpenTelemetry Collector to proxy sampling requests to AWS X-Ray using theâ€¦","fields":{"slug":"/docs/getting-started/remote-sampling/"},"frontmatter":{"title":"Configuring the OpenTelemetry Collector for X-Ray remote Sampling","description":"This page is about setting up X-Ray remote Sampling.","image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Configuring the OpenTelemetry Collector for X-Ray remote Sampling\",\n  \"description\": \"This page is about setting up X-Ray remote Sampling.\",\n  \"path\": \"/docs/getting-started/remote-sampling\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.aws.amazon.com/xray/latest/devguide/xray-console-sampling.html\"\n  }), \"AWS X-Ray remote sampling\"), \" is supported\\nwith OpenTelemetry by configuring the OpenTelemetry Collector to proxy sampling requests to AWS X-Ray using the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"awsproxy\"), \" extension. Enable the extension by adding this snippet to your collector configuration.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"extensions:\\n  awsproxy:\\nservice:\\n  extensions: [awsproxy]\\n\")), mdx(\"p\", null, \"For example, a full configuration that receives spans as OTLP, exports to X-Ray, and enables remote sampling may\\nlook like this.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"receivers:\\n  otlp:\\n    protocols:\\n      grpc:\\nexporters:\\n  awsxray:\\nextensions:\\n  awsproxy:\\nservice:\\n  extensions: [awsproxy]\\n  pipeline:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [awsxray]\\n\")), mdx(\"p\", null, \"This enables the proxy listening on the default endpoint of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0.0.0.0:2000\"), \" - SDK sampling extensions for X-Ray remote\\nsampling connect to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:2000\"), \" by default and will work out of the box when deploying the collector as a sidecar.\"), mdx(\"p\", null, \"The full list of configuration options can be found in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/awsproxy\"\n  }), \"component documentation\"), \".\"), mdx(\"p\", null, \"Once you have enabled the proxy extension and configured the remote sampler in your application, you can follow the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.aws.amazon.com/xray/latest/devguide/xray-console-sampling.html\"\n  }), \"AWS X-Ray documentation\"), \" to define custom sampling rules for incoming requests and see them applied across your entire fleet.\"), mdx(\"p\", null, \"The IAM policy used with the collector also needs permission to fetch sampling rules. This policy would allow the collector\\nto export trace data and fetch sampling rules.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n    \\\"Version\\\": \\\"2012-10-17\\\",\\n    \\\"Statement\\\": [\\n        {\\n            \\\"Effect\\\": \\\"Allow\\\",\\n            \\\"Action\\\": [\\n                \\\"xray:PutTraceSegments\\\",\\n                \\\"xray:PutTelemetryRecords\\\",\\n                \\\"xray:GetSamplingRules\\\",\\n                \\\"xray:GetSamplingTargets\\\",\\n                \\\"xray:GetSamplingStatisticSummaries\\\"\\n            ],\\n            \\\"Resource\\\": \\\"*\\\"\\n        }\\n    ]\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Warning: The proxy extension allows any application with network connectivity to the collector to send requests to X-Ray\\nwithout authentication. If not using any other authentication mechanism in front of the collector, it is recommended to\\nconfigure network policy to only allow network connectivity to applications that should be allowed to access X-Ray with\\nthe above IAM permissions, for example using network firewall rules.\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/docs/getting-started/remote-sampling/","githubEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/getting-started/remote-sampling.mdx"}},"staticQueryHashes":["2501019404","973074209"]}